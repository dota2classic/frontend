/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PlayerRecordDto,
    PlayerRecordDtoFromJSON,
    PlayerRecordDtoFromJSONTyped,
    PlayerRecordDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface PlayerRecordsResponse
 */
export interface PlayerRecordsResponse {
    /**
     * 
     * @type {Array<PlayerRecordDto>}
     * @memberof PlayerRecordsResponse
     */
    season: Array<PlayerRecordDto>;
    /**
     * 
     * @type {Array<PlayerRecordDto>}
     * @memberof PlayerRecordsResponse
     */
    overall: Array<PlayerRecordDto>;
    /**
     * 
     * @type {Array<PlayerRecordDto>}
     * @memberof PlayerRecordsResponse
     */
    month: Array<PlayerRecordDto>;
}

export function PlayerRecordsResponseFromJSON(json: any): PlayerRecordsResponse {
    return PlayerRecordsResponseFromJSONTyped(json, false);
}

export function PlayerRecordsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlayerRecordsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'season': ((json['season'] as Array<any>).map(PlayerRecordDtoFromJSON)),
        'overall': ((json['overall'] as Array<any>).map(PlayerRecordDtoFromJSON)),
        'month': ((json['month'] as Array<any>).map(PlayerRecordDtoFromJSON)),
    };
}

export function PlayerRecordsResponseToJSON(value?: PlayerRecordsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'season': ((value.season as Array<any>).map(PlayerRecordDtoToJSON)),
        'overall': ((value.overall as Array<any>).map(PlayerRecordDtoToJSON)),
        'month': ((value.month as Array<any>).map(PlayerRecordDtoToJSON)),
    };
}


