/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  Dota2Version,
  Dota2VersionFromJSON,
  Dota2VersionFromJSONTyped,
  Dota2VersionToJSON,
  MatchmakingMode,
  MatchmakingModeFromJSON,
  MatchmakingModeFromJSONTyped,
  MatchmakingModeToJSON,
  UserDTO,
  UserDTOFromJSON,
  UserDTOFromJSONTyped,
  UserDTOToJSON,
} from "./";

/**
 *
 * @export
 * @interface MatchInfoDto
 */
export interface MatchInfoDto {
  /**
   *
   * @type {MatchmakingMode}
   * @memberof MatchInfoDto
   */
  mode: MatchmakingMode;
  /**
   *
   * @type {Dota2Version}
   * @memberof MatchInfoDto
   */
  version: Dota2Version;
  /**
   *
   * @type {string}
   * @memberof MatchInfoDto
   */
  roomId: string;
  /**
   *
   * @type {Array<UserDTO>}
   * @memberof MatchInfoDto
   */
  radiant: Array<UserDTO>;
  /**
   *
   * @type {Array<UserDTO>}
   * @memberof MatchInfoDto
   */
  dire: Array<UserDTO>;
  /**
   *
   * @type {number}
   * @memberof MatchInfoDto
   */
  averageMMR: number;
}

export function MatchInfoDtoFromJSON(json: any): MatchInfoDto {
  return MatchInfoDtoFromJSONTyped(json, false);
}

export function MatchInfoDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): MatchInfoDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    mode: MatchmakingModeFromJSON(json["mode"]),
    version: Dota2VersionFromJSON(json["version"]),
    roomId: json["roomId"],
    radiant: (json["radiant"] as Array<any>).map(UserDTOFromJSON),
    dire: (json["dire"] as Array<any>).map(UserDTOFromJSON),
    averageMMR: json["averageMMR"],
  };
}

export function MatchInfoDtoToJSON(value?: MatchInfoDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    mode: MatchmakingModeToJSON(value.mode),
    version: Dota2VersionToJSON(value.version),
    roomId: value.roomId,
    radiant: (value.radiant as Array<any>).map(UserDTOToJSON),
    dire: (value.dire as Array<any>).map(UserDTOToJSON),
    averageMMR: value.averageMMR,
  };
}
