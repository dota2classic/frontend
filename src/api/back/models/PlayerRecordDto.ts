/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MatchDto,
    MatchDtoFromJSON,
    MatchDtoFromJSONTyped,
    MatchDtoToJSON,
    RecordType,
    RecordTypeFromJSON,
    RecordTypeFromJSONTyped,
    RecordTypeToJSON,
    UserDTO,
    UserDTOFromJSON,
    UserDTOFromJSONTyped,
    UserDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface PlayerRecordDto
 */
export interface PlayerRecordDto {
    /**
     * 
     * @type {RecordType}
     * @memberof PlayerRecordDto
     */
    recordType: RecordType;
    /**
     * 
     * @type {UserDTO}
     * @memberof PlayerRecordDto
     */
    player: UserDTO;
    /**
     * 
     * @type {MatchDto}
     * @memberof PlayerRecordDto
     */
    match?: MatchDto;
}

export function PlayerRecordDtoFromJSON(json: any): PlayerRecordDto {
    return PlayerRecordDtoFromJSONTyped(json, false);
}

export function PlayerRecordDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlayerRecordDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'recordType': RecordTypeFromJSON(json['recordType']),
        'player': UserDTOFromJSON(json['player']),
        'match': !exists(json, 'match') ? undefined : MatchDtoFromJSON(json['match']),
    };
}

export function PlayerRecordDtoToJSON(value?: PlayerRecordDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'recordType': RecordTypeToJSON(value.recordType),
        'player': UserDTOToJSON(value.player),
        'match': MatchDtoToJSON(value.match),
    };
}


