/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DotaGameMode,
    DotaGameModeFromJSON,
    DotaGameModeFromJSONTyped,
    DotaGameModeToJSON,
    DotaMap,
    DotaMapFromJSON,
    DotaMapFromJSONTyped,
    DotaMapToJSON,
    DotaPatch,
    DotaPatchFromJSON,
    DotaPatchFromJSONTyped,
    DotaPatchToJSON,
    Region,
    RegionFromJSON,
    RegionFromJSONTyped,
    RegionToJSON,
} from './';

/**
 * 
 * @export
 * @interface UpdateLobbyDto
 */
export interface UpdateLobbyDto {
    /**
     * 
     * @type {DotaGameMode}
     * @memberof UpdateLobbyDto
     */
    gameMode?: DotaGameMode;
    /**
     * 
     * @type {DotaMap}
     * @memberof UpdateLobbyDto
     */
    map?: DotaMap;
    /**
     * 
     * @type {Region}
     * @memberof UpdateLobbyDto
     */
    region?: Region;
    /**
     * 
     * @type {DotaPatch}
     * @memberof UpdateLobbyDto
     */
    patch?: DotaPatch;
    /**
     * 
     * @type {string}
     * @memberof UpdateLobbyDto
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateLobbyDto
     */
    name?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateLobbyDto
     */
    fillBots?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateLobbyDto
     */
    enableCheats?: boolean;
}

export function UpdateLobbyDtoFromJSON(json: any): UpdateLobbyDto {
    return UpdateLobbyDtoFromJSONTyped(json, false);
}

export function UpdateLobbyDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateLobbyDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'gameMode': !exists(json, 'gameMode') ? undefined : DotaGameModeFromJSON(json['gameMode']),
        'map': !exists(json, 'map') ? undefined : DotaMapFromJSON(json['map']),
        'region': !exists(json, 'region') ? undefined : RegionFromJSON(json['region']),
        'patch': !exists(json, 'patch') ? undefined : DotaPatchFromJSON(json['patch']),
        'password': !exists(json, 'password') ? undefined : json['password'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'fillBots': !exists(json, 'fillBots') ? undefined : json['fillBots'],
        'enableCheats': !exists(json, 'enableCheats') ? undefined : json['enableCheats'],
    };
}

export function UpdateLobbyDtoToJSON(value?: UpdateLobbyDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'gameMode': DotaGameModeToJSON(value.gameMode),
        'map': DotaMapToJSON(value.map),
        'region': RegionToJSON(value.region),
        'patch': DotaPatchToJSON(value.patch),
        'password': value.password,
        'name': value.name,
        'fillBots': value.fillBots,
        'enableCheats': value.enableCheats,
    };
}


