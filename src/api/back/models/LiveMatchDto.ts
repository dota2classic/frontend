/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
  DotaGameMode,
  DotaGameModeFromJSON,
  DotaGameModeToJSON,
  MatchmakingMode,
  MatchmakingModeFromJSON,
  MatchmakingModeToJSON,
  PlayerInfo,
  PlayerInfoFromJSON,
  PlayerInfoToJSON,
} from "./";

/**
 *
 * @export
 * @interface LiveMatchDto
 */
export interface LiveMatchDto {
  /**
   *
   * @type {MatchmakingMode}
   * @memberof LiveMatchDto
   */
  matchmakingMode: MatchmakingMode;
  /**
   *
   * @type {DotaGameMode}
   * @memberof LiveMatchDto
   */
  gameMode: DotaGameMode;
  /**
   *
   * @type {number}
   * @memberof LiveMatchDto
   */
  matchId: number;
  /**
   *
   * @type {number}
   * @memberof LiveMatchDto
   */
  duration: number;
  /**
   *
   * @type {string}
   * @memberof LiveMatchDto
   */
  server: string;
  /**
   *
   * @type {number}
   * @memberof LiveMatchDto
   */
  timestamp: number;
  /**
   *
   * @type {Array<PlayerInfo>}
   * @memberof LiveMatchDto
   */
  heroes: Array<PlayerInfo>;
}

export function LiveMatchDtoFromJSON(json: any): LiveMatchDto {
    return LiveMatchDtoFromJSONTyped(json, false);
}

export function LiveMatchDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiveMatchDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
      matchmakingMode: MatchmakingModeFromJSON(json["matchmakingMode"]),
      gameMode: DotaGameModeFromJSON(json["gameMode"]),
      matchId: json["matchId"],
      duration: json["duration"],
      server: json["server"],
      timestamp: json["timestamp"],
      heroes: (json["heroes"] as Array<any>).map(PlayerInfoFromJSON),
    };
}

export function LiveMatchDtoToJSON(value?: LiveMatchDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    matchmakingMode: MatchmakingModeToJSON(value.matchmakingMode),
    gameMode: DotaGameModeToJSON(value.gameMode),
    matchId: value.matchId,
    duration: value.duration,
    server: value.server,
    timestamp: value.timestamp,
    heroes: (value.heroes as Array<any>).map(PlayerInfoToJSON),
  };
}


