/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DotaGameMode,
    DotaGameModeFromJSON,
    DotaGameModeFromJSONTyped,
    DotaGameModeToJSON,
    DotaGameRulesState,
    DotaGameRulesStateFromJSON,
    DotaGameRulesStateFromJSONTyped,
    DotaGameRulesStateToJSON,
    MatchSlotInfo,
    MatchSlotInfoFromJSON,
    MatchSlotInfoFromJSONTyped,
    MatchSlotInfoToJSON,
    MatchmakingMode,
    MatchmakingModeFromJSON,
    MatchmakingModeFromJSONTyped,
    MatchmakingModeToJSON,
} from './';

/**
 * 
 * @export
 * @interface LiveMatchDto
 */
export interface LiveMatchDto {
    /**
     * 
     * @type {MatchmakingMode}
     * @memberof LiveMatchDto
     */
    matchmakingMode: MatchmakingMode;
    /**
     * 
     * @type {DotaGameMode}
     * @memberof LiveMatchDto
     */
    gameMode: DotaGameMode;
    /**
     * 
     * @type {DotaGameRulesState}
     * @memberof LiveMatchDto
     */
    gameState: DotaGameRulesState;
    /**
     * 
     * @type {number}
     * @memberof LiveMatchDto
     */
    matchId: number;
    /**
     * 
     * @type {number}
     * @memberof LiveMatchDto
     */
    duration: number;
    /**
     * 
     * @type {string}
     * @memberof LiveMatchDto
     */
    server: string;
    /**
     * 
     * @type {number}
     * @memberof LiveMatchDto
     */
    timestamp: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof LiveMatchDto
     */
    towers: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof LiveMatchDto
     */
    barracks: Array<number>;
    /**
     * 
     * @type {Array<MatchSlotInfo>}
     * @memberof LiveMatchDto
     */
    heroes: Array<MatchSlotInfo>;
}

export function LiveMatchDtoFromJSON(json: any): LiveMatchDto {
    return LiveMatchDtoFromJSONTyped(json, false);
}

export function LiveMatchDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiveMatchDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'matchmakingMode': MatchmakingModeFromJSON(json['matchmakingMode']),
        'gameMode': DotaGameModeFromJSON(json['gameMode']),
        'gameState': DotaGameRulesStateFromJSON(json['gameState']),
        'matchId': json['matchId'],
        'duration': json['duration'],
        'server': json['server'],
        'timestamp': json['timestamp'],
        'towers': json['towers'],
        'barracks': json['barracks'],
        'heroes': ((json['heroes'] as Array<any>).map(MatchSlotInfoFromJSON)),
    };
}

export function LiveMatchDtoToJSON(value?: LiveMatchDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'matchmakingMode': MatchmakingModeToJSON(value.matchmakingMode),
        'gameMode': DotaGameModeToJSON(value.gameMode),
        'gameState': DotaGameRulesStateToJSON(value.gameState),
        'matchId': value.matchId,
        'duration': value.duration,
        'server': value.server,
        'timestamp': value.timestamp,
        'towers': value.towers,
        'barracks': value.barracks,
        'heroes': ((value.heroes as Array<any>).map(MatchSlotInfoToJSON)),
    };
}


