/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SubmittedFeedbackOptionDto,
    SubmittedFeedbackOptionDtoFromJSON,
    SubmittedFeedbackOptionDtoFromJSONTyped,
    SubmittedFeedbackOptionDtoToJSON,
    UserDTO,
    UserDTOFromJSON,
    UserDTOFromJSONTyped,
    UserDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface PlayerFeedbackDto
 */
export interface PlayerFeedbackDto {
    /**
     * 
     * @type {number}
     * @memberof PlayerFeedbackDto
     */
    id: number;
    /**
     * 
     * @type {UserDTO}
     * @memberof PlayerFeedbackDto
     */
    user: UserDTO;
    /**
     * 
     * @type {string}
     * @memberof PlayerFeedbackDto
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof PlayerFeedbackDto
     */
    comment: string;
    /**
     * 
     * @type {Array<SubmittedFeedbackOptionDto>}
     * @memberof PlayerFeedbackDto
     */
    options: Array<SubmittedFeedbackOptionDto>;
}

export function PlayerFeedbackDtoFromJSON(json: any): PlayerFeedbackDto {
    return PlayerFeedbackDtoFromJSONTyped(json, false);
}

export function PlayerFeedbackDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlayerFeedbackDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'user': UserDTOFromJSON(json['user']),
        'title': json['title'],
        'comment': json['comment'],
        'options': ((json['options'] as Array<any>).map(SubmittedFeedbackOptionDtoFromJSON)),
    };
}

export function PlayerFeedbackDtoToJSON(value?: PlayerFeedbackDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'user': UserDTOToJSON(value.user),
        'title': value.title,
        'comment': value.comment,
        'options': ((value.options as Array<any>).map(SubmittedFeedbackOptionDtoToJSON)),
    };
}


