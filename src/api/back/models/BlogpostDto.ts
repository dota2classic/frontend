/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UploadedImageDto,
    UploadedImageDtoFromJSON,
    UploadedImageDtoFromJSONTyped,
    UploadedImageDtoToJSON,
    UserDTO,
    UserDTOFromJSON,
    UserDTOFromJSONTyped,
    UserDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface BlogpostDto
 */
export interface BlogpostDto {
    /**
     * 
     * @type {number}
     * @memberof BlogpostDto
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof BlogpostDto
     */
    content: string;
    /**
     * 
     * @type {string}
     * @memberof BlogpostDto
     */
    renderedContentHtml: string;
    /**
     * 
     * @type {string}
     * @memberof BlogpostDto
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof BlogpostDto
     */
    shortDescription: string;
    /**
     * 
     * @type {UploadedImageDto}
     * @memberof BlogpostDto
     */
    image: UploadedImageDto;
    /**
     * 
     * @type {boolean}
     * @memberof BlogpostDto
     */
    published: boolean;
    /**
     * 
     * @type {UserDTO}
     * @memberof BlogpostDto
     */
    author: UserDTO;
    /**
     * 
     * @type {string}
     * @memberof BlogpostDto
     */
    publishDate: string;
    /**
     * 
     * @type {string}
     * @memberof BlogpostDto
     */
    createdAt: string;
}

export function BlogpostDtoFromJSON(json: any): BlogpostDto {
    return BlogpostDtoFromJSONTyped(json, false);
}

export function BlogpostDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlogpostDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'content': json['content'],
        'renderedContentHtml': json['renderedContentHtml'],
        'title': json['title'],
        'shortDescription': json['shortDescription'],
        'image': UploadedImageDtoFromJSON(json['image']),
        'published': json['published'],
        'author': UserDTOFromJSON(json['author']),
        'publishDate': json['publishDate'],
        'createdAt': json['createdAt'],
    };
}

export function BlogpostDtoToJSON(value?: BlogpostDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'content': value.content,
        'renderedContentHtml': value.renderedContentHtml,
        'title': value.title,
        'shortDescription': value.shortDescription,
        'image': UploadedImageDtoToJSON(value.image),
        'published': value.published,
        'author': UserDTOToJSON(value.author),
        'publishDate': value.publishDate,
        'createdAt': value.createdAt,
    };
}


