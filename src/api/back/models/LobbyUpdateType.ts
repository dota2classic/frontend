/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LobbyDto,
    LobbyDtoFromJSON,
    LobbyDtoFromJSONTyped,
    LobbyDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface LobbyUpdateType
 */
export interface LobbyUpdateType {
    /**
     * 
     * @type {LobbyDto}
     * @memberof LobbyUpdateType
     */
    data?: LobbyDto;
    /**
     * 
     * @type {string}
     * @memberof LobbyUpdateType
     */
    action: LobbyUpdateTypeActionEnum;
    /**
     * 
     * @type {string}
     * @memberof LobbyUpdateType
     */
    lobbyId: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof LobbyUpdateType
     */
    kickedSteamIds: Array<string>;
}

export function LobbyUpdateTypeFromJSON(json: any): LobbyUpdateType {
    return LobbyUpdateTypeFromJSONTyped(json, false);
}

export function LobbyUpdateTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): LobbyUpdateType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': !exists(json, 'data') ? undefined : LobbyDtoFromJSON(json['data']),
        'action': json['action'],
        'lobbyId': json['lobbyId'],
        'kickedSteamIds': json['kickedSteamIds'],
    };
}

export function LobbyUpdateTypeToJSON(value?: LobbyUpdateType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': LobbyDtoToJSON(value.data),
        'action': value.action,
        'lobbyId': value.lobbyId,
        'kickedSteamIds': value.kickedSteamIds,
    };
}

/**
* @export
* @enum {string}
*/
export enum LobbyUpdateTypeActionEnum {
    Update = 'update',
    Close = 'close',
    Start = 'start',
    Kick = 'kick'
}


