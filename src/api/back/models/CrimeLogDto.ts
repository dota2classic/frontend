/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BanReason,
    BanReasonFromJSON,
    BanReasonFromJSONTyped,
    BanReasonToJSON,
    MatchmakingMode,
    MatchmakingModeFromJSON,
    MatchmakingModeFromJSONTyped,
    MatchmakingModeToJSON,
    UserDTO,
    UserDTOFromJSON,
    UserDTOFromJSONTyped,
    UserDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface CrimeLogDto
 */
export interface CrimeLogDto {
    /**
     * 
     * @type {BanReason}
     * @memberof CrimeLogDto
     */
    crime: BanReason;
    /**
     * 
     * @type {MatchmakingMode}
     * @memberof CrimeLogDto
     */
    lobbyType: MatchmakingMode;
    /**
     * 
     * @type {number}
     * @memberof CrimeLogDto
     */
    id: number;
    /**
     * 
     * @type {boolean}
     * @memberof CrimeLogDto
     */
    handled: boolean;
    /**
     * 
     * @type {UserDTO}
     * @memberof CrimeLogDto
     */
    user: UserDTO;
    /**
     * 
     * @type {string}
     * @memberof CrimeLogDto
     */
    createdAt: string;
    /**
     * 
     * @type {number}
     * @memberof CrimeLogDto
     */
    banDuration: number;
    /**
     * 
     * @type {number}
     * @memberof CrimeLogDto
     */
    matchId?: number;
}

export function CrimeLogDtoFromJSON(json: any): CrimeLogDto {
    return CrimeLogDtoFromJSONTyped(json, false);
}

export function CrimeLogDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CrimeLogDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'crime': BanReasonFromJSON(json['crime']),
        'lobbyType': MatchmakingModeFromJSON(json['lobby_type']),
        'id': json['id'],
        'handled': json['handled'],
        'user': UserDTOFromJSON(json['user']),
        'createdAt': json['created_at'],
        'banDuration': json['ban_duration'],
        'matchId': !exists(json, 'match_id') ? undefined : json['match_id'],
    };
}

export function CrimeLogDtoToJSON(value?: CrimeLogDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'crime': BanReasonToJSON(value.crime),
        'lobby_type': MatchmakingModeToJSON(value.lobbyType),
        'id': value.id,
        'handled': value.handled,
        'user': UserDTOToJSON(value.user),
        'created_at': value.createdAt,
        'ban_duration': value.banDuration,
        'match_id': value.matchId,
    };
}


