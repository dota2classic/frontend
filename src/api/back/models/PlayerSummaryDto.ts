/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlayerSummaryDto
 */
export interface PlayerSummaryDto {
    /**
     * 
     * @type {string}
     * @memberof PlayerSummaryDto
     */
    steamId: string;
    /**
     * 
     * @type {string}
     * @memberof PlayerSummaryDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PlayerSummaryDto
     */
    avatar: string;
    /**
     * 
     * @type {string}
     * @memberof PlayerSummaryDto
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof PlayerSummaryDto
     */
    mmr: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof PlayerSummaryDto
     */
    roles: Array<PlayerSummaryDtoRolesEnum>;
    /**
     * 
     * @type {number}
     * @memberof PlayerSummaryDto
     */
    rank: number;
    /**
     * 
     * @type {number}
     * @memberof PlayerSummaryDto
     */
    unrankedGamesLeft: number;
}

export function PlayerSummaryDtoFromJSON(json: any): PlayerSummaryDto {
    return PlayerSummaryDtoFromJSONTyped(json, false);
}

export function PlayerSummaryDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlayerSummaryDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'steamId': json['steam_id'],
        'name': json['name'],
        'avatar': json['avatar'],
        'id': json['id'],
        'mmr': json['mmr'],
        'roles': json['roles'],
        'rank': json['rank'],
        'unrankedGamesLeft': json['unrankedGamesLeft'],
    };
}

export function PlayerSummaryDtoToJSON(value?: PlayerSummaryDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'steam_id': value.steamId,
        'name': value.name,
        'avatar': value.avatar,
        'id': value.id,
        'mmr': value.mmr,
        'roles': value.roles,
        'rank': value.rank,
        'unrankedGamesLeft': value.unrankedGamesLeft,
    };
}

/**
* @export
* @enum {string}
*/
export enum PlayerSummaryDtoRolesEnum {
    PLAYER = 'PLAYER',
    OLD = 'OLD',
    HUMAN = 'HUMAN',
    MODERATOR = 'MODERATOR',
    ADMIN = 'ADMIN'
}


