/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PlayerSummaryDto
 */
export interface PlayerSummaryDto {
  /**
   *
   * @type {string}
   * @memberof PlayerSummaryDto
   */
  steamId: string;
  /**
   *
   * @type {string}
   * @memberof PlayerSummaryDto
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof PlayerSummaryDto
   */
  avatar: string;
  /**
   *
   * @type {string}
   * @memberof PlayerSummaryDto
   */
  id: string;
  /**
   *
   * @type {number}
   * @memberof PlayerSummaryDto
   */
  mmr: number;
  /**
   *
   * @type {number}
   * @memberof PlayerSummaryDto
   */
  rank: number;
  /**
   *
   * @type {number}
   * @memberof PlayerSummaryDto
   */
  unrankedGamesLeft: number;
  /**
   *
   * @type {number}
   * @memberof PlayerSummaryDto
   */
  gamesPlayed: number;
  /**
   *
   * @type {number}
   * @memberof PlayerSummaryDto
   */
  gamesPlayedAll: number;
  /**
   *
   * @type {number}
   * @memberof PlayerSummaryDto
   */
  wins: number;
  /**
   *
   * @type {number}
   * @memberof PlayerSummaryDto
   */
  loss: number;
}

export function PlayerSummaryDtoFromJSON(json: any): PlayerSummaryDto {
  return PlayerSummaryDtoFromJSONTyped(json, false);
}

export function PlayerSummaryDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PlayerSummaryDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    steamId: json["steam_id"],
    name: json["name"],
    avatar: json["avatar"],
    id: json["id"],
    mmr: json["mmr"],
    rank: json["rank"],
    unrankedGamesLeft: json["unrankedGamesLeft"],
    gamesPlayed: json["games_played"],
    gamesPlayedAll: json["games_played_all"],
    wins: json["wins"],
    loss: json["loss"],
  };
}

export function PlayerSummaryDtoToJSON(value?: PlayerSummaryDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    steam_id: value.steamId,
    name: value.name,
    avatar: value.avatar,
    id: value.id,
    mmr: value.mmr,
    rank: value.rank,
    unrankedGamesLeft: value.unrankedGamesLeft,
    games_played: value.gamesPlayed,
    games_played_all: value.gamesPlayedAll,
    wins: value.wins,
    loss: value.loss,
  };
}
