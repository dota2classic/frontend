/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DotaGameMode,
    DotaGameModeFromJSON,
    DotaGameModeFromJSONTyped,
    DotaGameModeToJSON,
    MatchmakingMode,
    MatchmakingModeFromJSON,
    MatchmakingModeFromJSONTyped,
    MatchmakingModeToJSON,
} from './';

/**
 * 
 * @export
 * @interface UpdateModeDTO
 */
export interface UpdateModeDTO {
    /**
     * 
     * @type {MatchmakingMode}
     * @memberof UpdateModeDTO
     */
    mode: MatchmakingMode;
    /**
     * 
     * @type {DotaGameMode}
     * @memberof UpdateModeDTO
     */
    dotaGameMode: DotaGameMode;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateModeDTO
     */
    enabled: boolean;
}

export function UpdateModeDTOFromJSON(json: any): UpdateModeDTO {
    return UpdateModeDTOFromJSONTyped(json, false);
}

export function UpdateModeDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateModeDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'mode': MatchmakingModeFromJSON(json['mode']),
        'dotaGameMode': DotaGameModeFromJSON(json['dotaGameMode']),
        'enabled': json['enabled'],
    };
}

export function UpdateModeDTOToJSON(value?: UpdateModeDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'mode': MatchmakingModeToJSON(value.mode),
        'dotaGameMode': DotaGameModeToJSON(value.dotaGameMode),
        'enabled': value.enabled,
    };
}


