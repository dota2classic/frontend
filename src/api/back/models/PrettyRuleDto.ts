/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RulePunishmentDto,
    RulePunishmentDtoFromJSON,
    RulePunishmentDtoFromJSONTyped,
    RulePunishmentDtoToJSON,
    RuleType,
    RuleTypeFromJSON,
    RuleTypeFromJSONTyped,
    RuleTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface PrettyRuleDto
 */
export interface PrettyRuleDto {
    /**
     * 
     * @type {RuleType}
     * @memberof PrettyRuleDto
     */
    ruleType: RuleType;
    /**
     * 
     * @type {number}
     * @memberof PrettyRuleDto
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof PrettyRuleDto
     */
    fullIndex: string;
    /**
     * 
     * @type {string}
     * @memberof PrettyRuleDto
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof PrettyRuleDto
     */
    description: string;
    /**
     * 
     * @type {RulePunishmentDto}
     * @memberof PrettyRuleDto
     */
    punishment?: RulePunishmentDto;
}

export function PrettyRuleDtoFromJSON(json: any): PrettyRuleDto {
    return PrettyRuleDtoFromJSONTyped(json, false);
}

export function PrettyRuleDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrettyRuleDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ruleType': RuleTypeFromJSON(json['ruleType']),
        'id': json['id'],
        'fullIndex': json['fullIndex'],
        'title': json['title'],
        'description': json['description'],
        'punishment': !exists(json, 'punishment') ? undefined : RulePunishmentDtoFromJSON(json['punishment']),
    };
}

export function PrettyRuleDtoToJSON(value?: PrettyRuleDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ruleType': RuleTypeToJSON(value.ruleType),
        'id': value.id,
        'fullIndex': value.fullIndex,
        'title': value.title,
        'description': value.description,
        'punishment': RulePunishmentDtoToJSON(value.punishment),
    };
}


