/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AchievementKey,
    AchievementKeyFromJSON,
    AchievementKeyFromJSONTyped,
    AchievementKeyToJSON,
    UserDTO,
    UserDTOFromJSON,
    UserDTOFromJSONTyped,
    UserDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface AchievementDto
 */
export interface AchievementDto {
    /**
     * 
     * @type {AchievementKey}
     * @memberof AchievementDto
     */
    key: AchievementKey;
    /**
     * 
     * @type {UserDTO}
     * @memberof AchievementDto
     */
    user: UserDTO;
    /**
     * 
     * @type {Array<number>}
     * @memberof AchievementDto
     */
    checkpoints: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof AchievementDto
     */
    progress: number;
    /**
     * 
     * @type {number}
     * @memberof AchievementDto
     */
    percentile: number;
    /**
     * 
     * @type {boolean}
     * @memberof AchievementDto
     */
    isComplete: boolean;
    /**
     * 
     * @type {number}
     * @memberof AchievementDto
     */
    matchId?: number;
}

export function AchievementDtoFromJSON(json: any): AchievementDto {
    return AchievementDtoFromJSONTyped(json, false);
}

export function AchievementDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AchievementDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'key': AchievementKeyFromJSON(json['key']),
        'user': UserDTOFromJSON(json['user']),
        'checkpoints': json['checkpoints'],
        'progress': json['progress'],
        'percentile': json['percentile'],
        'isComplete': json['isComplete'],
        'matchId': !exists(json, 'matchId') ? undefined : json['matchId'],
    };
}

export function AchievementDtoToJSON(value?: AchievementDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'key': AchievementKeyToJSON(value.key),
        'user': UserDTOToJSON(value.user),
        'checkpoints': value.checkpoints,
        'progress': value.progress,
        'percentile': value.percentile,
        'isComplete': value.isComplete,
        'matchId': value.matchId,
    };
}


