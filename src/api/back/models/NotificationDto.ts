/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NotificationDto
 */
export interface NotificationDto {
    /**
     * 
     * @type {string}
     * @memberof NotificationDto
     */
    id: string;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationDto
     */
    acknowledged: boolean;
    /**
     * 
     * @type {string}
     * @memberof NotificationDto
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationDto
     */
    expiresAt: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationDto
     */
    steamId: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationDto
     */
    entityType: NotificationDtoEntityTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof NotificationDto
     */
    entityId: number;
    /**
     * 
     * @type {string}
     * @memberof NotificationDto
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationDto
     */
    content: string;
}

export function NotificationDtoFromJSON(json: any): NotificationDto {
    return NotificationDtoFromJSONTyped(json, false);
}

export function NotificationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'acknowledged': json['acknowledged'],
        'createdAt': json['createdAt'],
        'expiresAt': json['expiresAt'],
        'steamId': json['steamId'],
        'entityType': json['entityType'],
        'entityId': json['entityId'],
        'title': json['title'],
        'content': json['content'],
    };
}

export function NotificationDtoToJSON(value?: NotificationDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'acknowledged': value.acknowledged,
        'createdAt': value.createdAt,
        'expiresAt': value.expiresAt,
        'steamId': value.steamId,
        'entityType': value.entityType,
        'entityId': value.entityId,
        'title': value.title,
        'content': value.content,
    };
}

/**
* @export
* @enum {string}
*/
export enum NotificationDtoEntityTypeEnum {
    FEEDBACK = 'FEEDBACK',
    ACHIEVEMENT = 'ACHIEVEMENT'
}


