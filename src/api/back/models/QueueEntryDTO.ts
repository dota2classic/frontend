/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MatchmakingMode,
    MatchmakingModeFromJSON,
    MatchmakingModeFromJSONTyped,
    MatchmakingModeToJSON,
    UserDTO,
    UserDTOFromJSON,
    UserDTOFromJSONTyped,
    UserDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface QueueEntryDTO
 */
export interface QueueEntryDTO {
    /**
     * 
     * @type {Array<MatchmakingMode>}
     * @memberof QueueEntryDTO
     */
    modes: Array<MatchmakingMode>;
    /**
     * 
     * @type {string}
     * @memberof QueueEntryDTO
     */
    partyId: string;
    /**
     * 
     * @type {Array<UserDTO>}
     * @memberof QueueEntryDTO
     */
    players: Array<UserDTO>;
}

export function QueueEntryDTOFromJSON(json: any): QueueEntryDTO {
    return QueueEntryDTOFromJSONTyped(json, false);
}

export function QueueEntryDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueueEntryDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'modes': ((json['modes'] as Array<any>).map(MatchmakingModeFromJSON)),
        'partyId': json['partyId'],
        'players': ((json['players'] as Array<any>).map(UserDTOFromJSON)),
    };
}

export function QueueEntryDTOToJSON(value?: QueueEntryDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'modes': ((value.modes as Array<any>).map(MatchmakingModeToJSON)),
        'partyId': value.partyId,
        'players': ((value.players as Array<any>).map(UserDTOToJSON)),
    };
}


