/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ReactionEntry,
    ReactionEntryFromJSON,
    ReactionEntryFromJSONTyped,
    ReactionEntryToJSON,
    UserDTO,
    UserDTOFromJSON,
    UserDTOFromJSONTyped,
    UserDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface ThreadMessageDTO
 */
export interface ThreadMessageDTO {
    /**
     * 
     * @type {UserDTO}
     * @memberof ThreadMessageDTO
     */
    author: UserDTO;
    /**
     * 
     * @type {string}
     * @memberof ThreadMessageDTO
     */
    threadId: string;
    /**
     * 
     * @type {string}
     * @memberof ThreadMessageDTO
     */
    messageId: string;
    /**
     * 
     * @type {string}
     * @memberof ThreadMessageDTO
     */
    content: string;
    /**
     * 
     * @type {string}
     * @memberof ThreadMessageDTO
     */
    createdAt: string;
    /**
     * 
     * @type {boolean}
     * @memberof ThreadMessageDTO
     */
    deleted: boolean;
    /**
     * 
     * @type {Array<ReactionEntry>}
     * @memberof ThreadMessageDTO
     */
    reactions: Array<ReactionEntry>;
}

export function ThreadMessageDTOFromJSON(json: any): ThreadMessageDTO {
    return ThreadMessageDTOFromJSONTyped(json, false);
}

export function ThreadMessageDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThreadMessageDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'author': UserDTOFromJSON(json['author']),
        'threadId': json['threadId'],
        'messageId': json['messageId'],
        'content': json['content'],
        'createdAt': json['createdAt'],
        'deleted': json['deleted'],
        'reactions': ((json['reactions'] as Array<any>).map(ReactionEntryFromJSON)),
    };
}

export function ThreadMessageDTOToJSON(value?: ThreadMessageDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'author': UserDTOToJSON(value.author),
        'threadId': value.threadId,
        'messageId': value.messageId,
        'content': value.content,
        'createdAt': value.createdAt,
        'deleted': value.deleted,
        'reactions': ((value.reactions as Array<any>).map(ReactionEntryToJSON)),
    };
}


