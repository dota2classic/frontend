/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ThreadMessageDTO
 */
export interface ThreadMessageDTO {
  /**
   *
   * @type {string}
   * @memberof ThreadMessageDTO
   */
  steamId: string;
  /**
   *
   * @type {string}
   * @memberof ThreadMessageDTO
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof ThreadMessageDTO
   */
  avatar: string;
  /**
   *
   * @type {string}
   * @memberof ThreadMessageDTO
   */
  threadId: string;
  /**
   *
   * @type {string}
   * @memberof ThreadMessageDTO
   */
  messageId: string;
  /**
   *
   * @type {string}
   * @memberof ThreadMessageDTO
   */
  content: string;
  /**
   *
   * @type {string}
   * @memberof ThreadMessageDTO
   */
  createdAt: string;
  /**
   *
   * @type {number}
   * @memberof ThreadMessageDTO
   */
  index: number;
}

export function ThreadMessageDTOFromJSON(json: any): ThreadMessageDTO {
  return ThreadMessageDTOFromJSONTyped(json, false);
}

export function ThreadMessageDTOFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ThreadMessageDTO {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    steamId: json["steamId"],
    name: json["name"],
    avatar: json["avatar"],
    threadId: json["threadId"],
    messageId: json["messageId"],
    content: json["content"],
    createdAt: json["createdAt"],
    index: json["index"],
  };
}

export function ThreadMessageDTOToJSON(value?: ThreadMessageDTO | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    steamId: value.steamId,
    name: value.name,
    avatar: value.avatar,
    threadId: value.threadId,
    messageId: value.messageId,
    content: value.content,
    createdAt: value.createdAt,
    index: value.index,
  };
}
