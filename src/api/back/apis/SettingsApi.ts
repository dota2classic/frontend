/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from "../runtime";
import useSWR from "swr";
import { SWRConfiguration } from "swr/_internal";


/**
 * 
 */
export class SettingsApi extends runtime.BaseAPI {

    /**
     */
    private async authControllerRemoveTwitchConnectionRaw(): Promise<runtime.ApiResponse<void>> {
        this.authControllerRemoveTwitchConnectionValidation();
        const context = this.authControllerRemoveTwitchConnectionContext();
        const response = await this.request(context);

        return new runtime.VoidApiResponse(response);
    }



    /**
     */
    private authControllerRemoveTwitchConnectionValidation() {
    }

    /**
     */
    authControllerRemoveTwitchConnectionContext(): runtime.RequestOpts {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === "function" ? token("bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        return {
            path: `/v1/settings/twitch`,
            method: "DELETE",
            headers: headerParameters,
            query: queryParameters,
        };
    }

    /**
     */
    authControllerRemoveTwitchConnection = async (): Promise<void> => {
        await this.authControllerRemoveTwitchConnectionRaw();
    }

    useAuthControllerRemoveTwitchConnection(config?: SWRConfiguration<void, Error>) {
        let valid = true

        const context = this.authControllerRemoveTwitchConnectionContext();
        return useSWR(context, valid ? () => this.authControllerRemoveTwitchConnection() : null, config)
    }

}
