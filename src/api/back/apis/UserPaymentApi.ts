/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from "../runtime";
import useSWR from "swr";
import { SWRConfiguration } from "swr/_internal";

import {
  StartPaymentDto,
  StartPaymentDtoFromJSON,
  StartPaymentDtoToJSON,
} from "../models";

/**
 * 
 */
export class UserPaymentApi extends runtime.BaseAPI {

    /**
     */
    private async userPaymentsControllerCreatePaymentRaw(): Promise<runtime.ApiResponse<StartPaymentDto>> {
        this.userPaymentsControllerCreatePaymentValidation();
        const context = this.userPaymentsControllerCreatePaymentContext();
        const response = await this.request(context);

        return new runtime.JSONApiResponse(response, (jsonValue) => StartPaymentDtoFromJSON(jsonValue));
    }



    /**
     */
    private userPaymentsControllerCreatePaymentValidation() {
    }

    /**
     */
    userPaymentsControllerCreatePaymentContext(): runtime.RequestOpts {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === "function" ? token("bearer", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        return {
            path: `/v1/user_payment`,
            method: "POST",
            headers: headerParameters,
            query: queryParameters,
        };
    }

    /**
     */
    userPaymentsControllerCreatePayment = async (): Promise<StartPaymentDto> => {
        const response = await this.userPaymentsControllerCreatePaymentRaw();
        return await response.value();
    }


}
